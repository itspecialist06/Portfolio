import random
import string


def generate_password(length=12, use_digits=True, use_special_chars=True, use_uppercase=True):
    lowercase_letters = string.ascii_lowercase
    uppercase_letters = string.ascii_uppercase if use_uppercase else ''
    digits = string.digits if use_digits else ''
    special_chars = string.punctuation if use_special_chars else ''

    all_chars = lowercase_letters + uppercase_letters + digits + special_chars
    if not all_chars:
        return "–û—à–∏–±–∫–∞: –ù–µ –≤—ã–±—Ä–∞–Ω—ã —Å–∏–º–≤–æ–ª—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª—è."

    password = ''.join(random.choice(all_chars) for _ in range(length))
    return password


def generate_multiple_passwords(count=5, length=12, use_digits=True, use_special_chars=True, use_uppercase=True):
    return [generate_password(length, use_digits, use_special_chars, use_uppercase) for _ in range(count)]


if __name__ == "__main__":
    print("üî• –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –£–ª—å—Ç–∏–º–∞—Ç–∏–≤–Ω—ã–π –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ü–∞—Ä–æ–ª–µ–π! üî•")
    length = int(input("–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É –ø–∞—Ä–æ–ª—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 12): ") or 12)
    use_digits = input("–í–∫–ª—é—á–∞—Ç—å —Ü–∏—Ñ—Ä—ã? (–¥/–Ω, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥): ").strip().lower() in ['–¥', '–¥–∞', '']
    use_special_chars = input("–í–∫–ª—é—á–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã? (–¥/–Ω, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥): ").strip().lower() in ['–¥', '–¥–∞',
                                                                                                           '']
    use_uppercase = input("–í–∫–ª—é—á–∞—Ç—å –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã? (–¥/–Ω, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥): ").strip().lower() in ['–¥', '–¥–∞', '']
    count = int(input("–°–∫–æ–ª—å–∫–æ –ø–∞—Ä–æ–ª–µ–π —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å? (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1): ") or 1)

    passwords = generate_multiple_passwords(count, length, use_digits, use_special_chars, use_uppercase)
    print("\nüöÄ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä–æ–ª–∏:")
    for idx, pwd in enumerate(passwords, 1):
        print(f"{idx}. {pwd}")
    print("\n‚úÖ –ë—É–¥—å—Ç–µ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞–¥–µ–∂–Ω—ã–µ –ø–∞—Ä–æ–ª–∏!")
